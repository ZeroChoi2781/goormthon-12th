name: '[CD] Vapor Changelog Slack 알림'

on:
  workflow_run:
    workflows: \[CD\] Vapor 릴리즈
    types:
      - completed

jobs:
  on-success:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Get current package version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.2.3
        with:
            path: packages/vapor-components/

      # 정기/비정기 알림을 구분하기 위한 step입니다. 비정기 릴리즈인 경우에만 알림을 전송합니다.
      # 패키지 버전의 마지막 글자를 기준으로 정기/비정기를 구분합니다.
      - name: Check Irregular Release
        run: |
          version=${{ steps.package-version.outputs.current-version }}
          if [[ "${version: -1}" == "0" ]]; then
              echo "비정기 릴리즈가 아닙니다."
              exit 1
          fi
          echo "비정기 릴리즈 입니다."

      - name: Read the latest CHANGELOG entry
        id: changelog
        run: |
          # 가장 최근 버전 헤더 아래의 내용을 CHANGELOG.md에서 추출
          CHANGELOG=$(awk '/^## \[|^### \[/{if (++count==2) exit} count{print}' CHANGELOG.md)
          
          CHANGELOG=$(echo "$CHANGELOG" | sed -E 's/^##+ (.+)/*\1*/')
          
          # Slack에서 굵게를 기울임으로 변환하기 위해 "**"를 "*"로 대체
          CHANGELOG=$(echo "$CHANGELOG" | sed 's/\*\*/\*/g')

          # 마크다운 URL을 Slack 포맷 URL로 변환
          CHANGELOG=$(echo "$CHANGELOG" | sed -E 's/\\?([[][^]]+]\\?)\\?[(]([^()]+)\\?[)]/<\2|\1>/g')

          # 수정된 변경로그를 환경 파일에 작성
          echo "CHANGELOG_CONTENT<<EOF" >> $GITHUB_ENV
          echo "$CHANGELOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
            
      - name: Send to Slack via Webhook
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEB_HOOK }}
          CHANGELOG_CONTENT: ${{ env.CHANGELOG_CONTENT }}
        run: |
          # JSON 구문 오류를 방지하기 위해 변경로그 내용의 이중 따옴표를 이스케이프
          ESCAPED_CHANGELOG_CONTENT=$(echo "$CHANGELOG_CONTENT" | sed 's/\^H//g' | sed 's/"/\\"/g') 
          
          # 결합된 메시지를 Slack으로 전송
          curl -X POST --data-urlencode "payload={
            \"username\": \"GDS-bot\", 
            \"attachments\": [
              {
                \"pretext\": \"*@vapor-alarm* Vapor Packages ${{ steps.package-version.outputs.current-version }}(<https://vapor.goorm.io/guides/change-log| changelog>)가 릴리즈 됐습니다 :tada:\",
                \"color\": \"#5094FA\",
              },
              {
                \"color\": \"#36a64f\",
                \"blocks\": [
                  {
                    \"type\": \"section\",
                    \"text\": {
                      \"type\": \"mrkdwn\",
                      \"text\": \"${ESCAPED_CHANGELOG_CONTENT}\"
                    }
                  }
                ]
              }
            ]
          }" "${{ secrets.SLACK_WEB_HOOK }}"
  on-failure:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - name: Get current package version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.2.3
        with:
            path: packages/vapor-components/
      - name: Send Slack failure message
        run: |
          curl -X POST \
          -H 'Content-type: application/json' \
          --data '{
            "username": "GDS-bot",
            "attachments": [{
              "pretext": "*@vapor-alarm* Vapor Packages ${{ steps.package-version.outputs.current-version }} 버전 배포 실패했습니다 :red_circle:",
              "color": "#ff5c5c",
              "fields": [{
                "title": "Repository",
                "value": "<${{ github.server_url }}/${{ github.repository }}|${{ github.repository }}>",
                "short": false
              }, {
                "title": "Branch",
                "value": "${{ github.ref_name }}",
                "short": true
              }, {
                "title": "Commit",
                "value": "<${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}>",
                "short": true
              }, {
                "title": "Author",
                "value": "${{ github.actor }}",
                "short": true
              }]
            }]
          }' "${{ secrets.SLACK_WEB_HOOK_ALARM }}"
    