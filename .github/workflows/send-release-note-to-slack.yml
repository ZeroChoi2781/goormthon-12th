name: '[CD] Vapor Release Note Slack 알림'

on:
  workflow_dispatch:
  workflow_run:
    workflows: \[CD\] Vapor 릴리즈
    types:
      - completed

jobs:
  on-success:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Get current package version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.2.3
        with:
          path: packages/vapor-components/

      # 정기/비정기 알림을 구분하기 위한 step입니다. 정기 릴리즈인 경우에만 알림을 전송합니다.
      # 패키지 버전의 마지막 글자를 기준으로 정기/비정기를 구분합니다.
      - name: Check Regular Release
        run: |
          version=${{ steps.package-version.outputs.current-version }}
          if [[ "${version: -1}" != "0" ]]; then
              echo "정기 릴리즈가 아닙니다."
              exit 1
          fi
          echo "정기 릴리즈 입니다."

      # 노션의 릴리즈 노트 링크 가져오기
      - name: Get Recent Release note
        env:
          NOTION_RELEASE_NOTE_DB_ID: ${{secrets.NOTION_RELEASE_NOTE_DB_ID}}
          NOTION_API_KEY: ${{ secrets.NOTION_API_KEY}}
        run: |
          response=$(curl -X POST 'https://api.notion.com/v1/databases/${{env.NOTION_RELEASE_NOTE_DB_ID}}/query' \
            -H 'Authorization: Bearer ${{env.NOTION_API_KEY}}' \
            -H 'Content-Type: application/json' \
            -H 'Notion-Version: 2022-06-28' \
            -d '{
                    "sorts": [
                    {
                        "timestamp": "created_time",
                        "direction": "descending"
                    }
                    ],
                    "page_size": 1
                }')

          echo "$response" > response.json

      # 노션 문서 내용인 JSON을 파싱하기 위한 jq
      - name: Install jq
        run: sudo apt-get install jq

      # 가장 최근에 생성한 문서 url 추출
      - name: Extract url using jq
        run: |
          url=$(jq -r '.results[0].url' response.json)
          echo "RELEASE_NOTE_URL=$url" >> $GITHUB_ENV

      - name: Send to Slack via Webhook
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEB_HOOK }}
          RELEASE_NOTE_URL: ${{ env.RELEASE_NOTE_URL }}
        run: |
          # 결합된 메시지를 Slack으로 전송
          curl -X POST --data-urlencode "payload={
            \"username\": \"GDS-bot\",
            \"attachments\": [
              {
                \"pretext\": \"*@vapor-alarm* Vapor Packages ${{ steps.package-version.outputs.current-version }}(<${{env.RELEASE_NOTE_URL}}| 릴리즈 노트>)가 릴리즈 됐습니다 :tada:\",
                \"text\": \":link: <https://www.notion.so/goorm/RELEASE-NOTE-1454e6997fb08022a4c7f4d9dab39c4c?pvs=4|Release Note> 페이지\",
                \"color\": \"#5094FA\",
              },
            ]
          }" "${{ secrets.SLACK_WEB_HOOK }}"
